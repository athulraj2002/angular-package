import { EventCallback, OptionItem } from '../../../pop-common.model';
import { TableConfig } from '../pop-table/pop-table.model';
export interface SideBySideOptionInterface {
    value: string | number;
    name: string;
    group?: string;
    sort_order?: number;
    patching?: boolean;
    optionFilter?: boolean;
    assignBlock?: boolean;
    optionBlock?: boolean;
    assignedFilter?: boolean;
    errMessage?: string;
}
export interface SideBySideOptions {
    assigned?: any;
    resource?: string;
    child?: string;
    parent?: string;
    values: SideBySideOptionInterface[];
    empty?: OptionItem;
    prevent?: Array<string | number>;
    ensure?: OptionItem;
}
export interface SideBySideInterface {
    id?: number | string;
    name?: string;
    assigned?: Array<string | number>;
    assignAll?: boolean;
    assignedLabel?: string;
    bubble?: boolean;
    bucketHeight?: number;
    bucketLimit?: number;
    disabled?: boolean;
    displayCircleID?: boolean;
    displayHelper?: boolean;
    displayTitle?: boolean;
    facade?: boolean;
    facadeEvent?: boolean;
    helpText?: string;
    helpTextRight?: string;
    height?: number;
    optionsLabel?: string;
    filter?: boolean;
    filterBoth?: boolean;
    route?: string;
    metadata?: object;
    options: SideBySideOptions;
    removeAll?: boolean;
    required?: boolean;
    sort?: boolean;
    sessionPath?: string;
    display?: string;
    parentHeight?: string;
    patch?: {
        path: string;
        conflictPath?: string;
        conflictMessage?: string;
        conflictHeader?: string;
        addId?: boolean;
        conflictTableConfig?: TableConfig;
        field?: string;
        businessId?: number;
        callback?: EventCallback;
        ignore401?: boolean;
        metadata?: object;
        displayIndicator?: boolean;
        version?: number;
        running?: boolean;
        assignErrMessage?: string;
        removeErrMessage?: string;
        assignMethod?: 'POST' | 'PATCH';
        removeMethod?: 'POST' | 'PATCH' | 'DELETE';
    };
}
export declare class SideBySideConfig {
    id: any;
    name: string;
    bubble: boolean;
    hasLabelRow: boolean;
    hasFilterRow: boolean;
    hasHeader: boolean;
    assigned: Array<string | number>;
    assignAll: boolean;
    assignedLabel: string;
    bucketHeight?: number;
    bucketLimit: number;
    disabled: boolean;
    displayCircleID: boolean;
    displayHelper: boolean;
    displayTitle: boolean;
    facade: boolean;
    facadeEvent: boolean;
    helpText: string;
    helpTextRight: string;
    optionsLabel: string;
    optionHtml: string;
    filter: boolean;
    filterBoth: boolean;
    height?: number;
    route: string;
    metadata: any;
    options: SideBySideOptions;
    removeAll: boolean;
    required?: boolean;
    sort: false;
    display: string;
    patch: any;
    parentClassName?: string;
    removeAllOptions: any;
    addAllOptions: any;
    assign: any;
    remove: any;
    applyFilter: any;
    getAssigned: any;
    block: any;
    unblock: any;
    control: any;
    constructor(config: SideBySideInterface);
}
