import { FormControl, ValidatorFn } from '@angular/forms';
import { EventCallback, FieldItemOption, FieldItemOptions, FieldItemPatchInterface } from '../../../../pop-common.model';
import { SetControl } from '../../../../pop-common-dom.models';
export interface SelectListGroupInterface {
    label: string;
    options: FieldItemOptions;
    all?: boolean;
    indeterminate?: boolean;
    groupFk?: number | string;
    visible?: number;
    selected?: number;
    open?: boolean;
}
export interface SelectListConfigInterface {
    all?: boolean;
    allLabel?: string;
    allowAll?: boolean;
    allowGroupAll?: boolean;
    allValue?: boolean | string | number | null | any[];
    allOverlay?: boolean;
    allOverlayEnabled?: boolean;
    allOverlayLabel?: string;
    allOverlayMessage?: string;
    allOverlayCallback?: EventCallback;
    bubble?: boolean;
    checkboxPosition?: string;
    control?: FormControl;
    collapsed?: boolean;
    disabledIds?: number[];
    disabled?: boolean;
    displayErrors?: boolean;
    emptyValue?: boolean | string | number | null | any[];
    empty?: 'ConvertEmptyToNull' | 'ConvertEmptyToZero';
    emptyLabel?: string;
    facade?: boolean;
    filter?: boolean;
    helpText?: string;
    height?: number;
    id?: number | string;
    label?: string;
    levelGap?: number;
    mode?: FieldItemOption[];
    minHeight?: number;
    multiple?: boolean;
    noInitialValue?: boolean;
    name?: string;
    options?: FieldItemOptions;
    outline?: boolean;
    patch?: FieldItemPatchInterface;
    patchGroupFk?: boolean;
    required?: boolean;
    session?: boolean;
    sessionPath?: string;
    sort?: boolean;
    value?: Array<number | string> | number | string;
    validators?: Array<ValidatorFn>;
}
export declare class SelectListConfig implements SetControl {
    allValue: any;
    allLabel: string;
    allowAll: boolean;
    allowGroupAll?: boolean;
    allOverlay?: boolean;
    allOverlayEnabled?: boolean;
    allOverlayLabel?: string;
    allOverlayMessage?: string;
    allOverlayCallback?: EventCallback;
    all: boolean;
    bubble: boolean;
    checkboxPosition: string;
    collapsed: boolean;
    control: FormControl;
    column: string;
    displayErrors: boolean;
    disableOption: any;
    defaultHeight: any;
    defaultMode: string | number;
    disabled: boolean;
    disabledIds: any[];
    enableOption: any;
    emptyValue: any;
    emptyLabel: any;
    facade: boolean;
    filter: boolean;
    focusSearch: any;
    groups: SelectListGroupInterface[];
    helpText: string;
    height: any;
    id: number | string;
    levelGap: number;
    label: string;
    mode?: FieldItemOption[];
    message: string;
    multiple: boolean;
    minHeight: any;
    noInitialValue: boolean;
    outline: boolean;
    options?: FieldItemOptions;
    patch: FieldItemPatchInterface;
    patchGroupFk: boolean;
    required?: boolean;
    route: any;
    session?: boolean;
    sessionPath?: string;
    sort: boolean;
    setDisabled: any;
    strVal: string;
    setActive: any;
    setHeight: any;
    clearSelected: any;
    selectedOptions: any[];
    triggerOnChange: any;
    value?: Array<number | string> | number | string;
    validators: Array<ValidatorFn>;
    constructor(params?: SelectListConfigInterface);
    setControl(): void;
    private setDefaultValues;
    private getOptionGroups;
    resetSelection(): void;
    addSelectedOption(option: number): void;
}
