import { FormControl } from '@angular/forms';
import { FieldItemPatchInterface } from '../../../../pop-common.model';
import { SetControl } from '../../../../pop-common-dom.models';
export interface LabelConfigInterface {
    button?: boolean;
    bubble?: boolean;
    border?: boolean;
    copyLabel?: boolean;
    copyLabelDisplay?: string;
    copyLabelBody?: string | number;
    copyLabelDisplayTransformation?: any;
    copyLabelBodyTransformation?: any;
    copyValue?: boolean;
    copyValueDisplay?: string;
    copyValueBody?: string | number;
    copyValueDisplayTransformation?: any;
    copyValueBodyTransformation?: any;
    helpText?: string;
    icon?: string;
    labelButton?: boolean;
    link?: boolean;
    label: string;
    metadata?: object;
    name?: string;
    patch?: FieldItemPatchInterface;
    route?: string;
    subLabel?: string;
    subValue?: string;
    textOverflow?: 'wrap' | 'ellipsis';
    truncate?: number;
    tooltip?: string;
    valueButton?: boolean;
    valueButtonDisplay?: string;
    valueButtonDisplayTransformation?: any;
    valueButtonDisabled?: boolean;
    value?: string | number;
}
export declare class LabelConfig implements SetControl {
    bubble: boolean;
    button: boolean;
    border: boolean;
    control: any;
    copyValue: boolean;
    copyValueDisplay?: string;
    copyValueBody?: string | number;
    copyValueDisplayTransformation?: string;
    copyValueBodyTransformation?: string;
    copyLabel: boolean;
    copyLabelDisplay?: string;
    copyLabelBody?: string | number;
    copyLabelDisplayTransformation?: string;
    copyLabelBodyTransformation?: string;
    html: string;
    helpText: string;
    icon: any;
    iconType: string;
    name: string;
    label: string;
    labelButton?: boolean;
    link: boolean;
    metadata: any;
    patch: FieldItemPatchInterface;
    route: any;
    subLabel: string;
    subValue: string;
    tooltip: string;
    textOverflow?: 'wrap' | 'ellipsis';
    truncate: number;
    value: string;
    valueButton: boolean;
    valueButtonDisplay?: string;
    valueButtonDisplayTransformation?: any;
    valueButtonDisabled: boolean;
    constructor(params?: LabelConfigInterface);
    setControl(): void;
}
export declare class MetadataConfig {
    bubble: boolean;
    value: string | number | any[];
    control: FormControl;
    name: any;
    constructor(name: string, value: string | number | any[]);
}
