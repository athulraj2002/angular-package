import { FormControl } from '@angular/forms';
export class LabelConfig {
    constructor(params) {
        this.bubble = false;
        this.button = false;
        this.border = false;
        this.copyValue = false;
        this.copyLabel = false;
        this.html = 'label';
        this.helpText = '';
        this.iconType = 'mat';
        this.name = 'name';
        this.label = 'Label';
        this.link = false;
        this.subLabel = '';
        this.subValue = '';
        this.tooltip = '';
        this.textOverflow = 'wrap';
        this.truncate = 0;
        this.value = '';
        this.valueButton = false;
        this.valueButtonDisabled = false;
        if (params)
            for (const i in params)
                this[i] = params[i];
        if (this.link || this.route)
            this.html = 'link';
        if (!this.patch)
            this.patch = { field: '', duration: 750, path: '', disabled: false };
        if (this.patch.displayIndicator !== false)
            this.patch.displayIndicator = true;
        if (this.icon) {
            if (this.icon.length === 1) {
                this.icon = this.icon.toUpperCase();
                this.iconType = 'sw';
            }
        }
    }
    setControl() {
        // meet requirement
    }
}
export class MetadataConfig {
    constructor(name, value) {
        this.bubble = false;
        this.value = '';
        this.name = name;
        this.value = value;
        this.control = new FormControl(value);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwtY29uZmlnLm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcG9wLWNvbW1vbi9zcmMvbGliL21vZHVsZXMvYmFzZS9wb3AtZmllbGQtaXRlbS9wb3AtbGFiZWwvbGFiZWwtY29uZmlnLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQTBDN0MsTUFBTSxPQUFPLFdBQVc7SUF3Q3RCLFlBQWEsTUFBNkI7UUF2QzFDLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFDZixXQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ2YsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUVmLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFLbEIsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUtsQixTQUFJLEdBQUcsT0FBTyxDQUFDO1FBQ2YsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUVkLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsU0FBSSxHQUFHLE1BQU0sQ0FBQztRQUNkLFVBQUssR0FBRyxPQUFPLENBQUM7UUFFaEIsU0FBSSxHQUFHLEtBQUssQ0FBQztRQUliLGFBQVEsR0FBRyxFQUFFLENBQUM7UUFDZCxhQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ2QsWUFBTyxHQUFHLEVBQUUsQ0FBQztRQUNiLGlCQUFZLEdBQXlCLE1BQU0sQ0FBQztRQUM1QyxhQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQ2IsVUFBSyxHQUFHLEVBQUUsQ0FBQztRQUNYLGdCQUFXLEdBQUcsS0FBSyxDQUFDO1FBR3BCLHdCQUFtQixHQUFHLEtBQUssQ0FBQztRQU0xQixJQUFJLE1BQU07WUFBRyxLQUFLLE1BQU0sQ0FBQyxJQUFJLE1BQU07Z0JBQUcsSUFBSSxDQUFFLENBQUMsQ0FBRSxHQUFHLE1BQU0sQ0FBRSxDQUFDLENBQUUsQ0FBQztRQUM5RCxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUs7WUFBRyxJQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQztRQUNqRCxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUs7WUFBRyxJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxDQUFDO1FBQ3ZGLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsS0FBSyxLQUFLO1lBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7UUFDL0UsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2IsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7Z0JBQzFCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztnQkFDcEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7YUFDdEI7U0FDRjtJQUNILENBQUM7SUFHRCxVQUFVO1FBQ1IsbUJBQW1CO0lBQ3JCLENBQUM7Q0FDRjtBQUdELE1BQU0sT0FBTyxjQUFjO0lBT3pCLFlBQWEsSUFBWSxFQUFFLEtBQThCO1FBTnpELFdBQU0sR0FBRyxLQUFLLENBQUM7UUFDZixVQUFLLEdBQTRCLEVBQUUsQ0FBQztRQU1sQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksV0FBVyxDQUFFLEtBQUssQ0FBRSxDQUFDO0lBQzFDLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZvcm1Db250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRmllbGRJdGVtUGF0Y2hJbnRlcmZhY2UgfSBmcm9tICcuLi8uLi8uLi8uLi9wb3AtY29tbW9uLm1vZGVsJztcbmltcG9ydCB7IFNldENvbnRyb2wgfSBmcm9tICcuLi8uLi8uLi8uLi9wb3AtY29tbW9uLWRvbS5tb2RlbHMnO1xuXG5cbmV4cG9ydCBpbnRlcmZhY2UgTGFiZWxDb25maWdJbnRlcmZhY2Uge1xuICBidXR0b24/OiBib29sZWFuOyAgICAgICAvLyBUdXJuIHRleHQvaWNvbiBpbnRvIGEgcm91dGUgbWV0aG9kXG4gIGJ1YmJsZT86IGJvb2xlYW47XG4gIGJvcmRlcj86IGJvb2xlYW47XG4gIGNvcHlMYWJlbD86IGJvb2xlYW47ICAgICAgICAgLy8gVGhlIGxhYmVsIHRleHQgaGFzIGEgY2xpY2sgdG8gY29weVxuICBjb3B5TGFiZWxEaXNwbGF5Pzogc3RyaW5nOyAgLy8gVGhlIGxhYmVsIHRoYXQgc2hvdWxkIGdvIHdpdGggdGhlIGxhYmVsIGNvcHkgYnV0dG9uXG4gIGNvcHlMYWJlbEJvZHk/OiBzdHJpbmcgfCBudW1iZXI7ICAgIC8vIFRoZSB2YWx1ZSB0aGF0IGJlIGNvcGllZCB3aGVuIHRoZSBsYWJlbCBjb3B5IGJ1dHRvbiBpcyBjbGlja2VkXG4gIGNvcHlMYWJlbERpc3BsYXlUcmFuc2Zvcm1hdGlvbj86IGFueTsgLy8gVGhlIHRyYW5zZm9ybWF0aW9uIHRoYXQgc2hvdWxkIGhhcHBlbiB0byB0aGUgY29weUxhYmVsRGlzcGxheVxuICBjb3B5TGFiZWxCb2R5VHJhbnNmb3JtYXRpb24/OiBhbnk7IC8vIFRoZSB0cmFuc2Zvcm1hdGlvbiB0aGF0IHNob3VsZCBoYXBwZW4gdG8gdGhlIGNvcHlMYWJlbEJvZHlcbiAgY29weVZhbHVlPzogYm9vbGVhbjsgICAgICAgICAvLyBUaGUgdmFsdWUgdGV4dCBoYXMgYSBjbGljayB0byBjb3B5XG4gIGNvcHlWYWx1ZURpc3BsYXk/OiBzdHJpbmc7ICAvLyBUaGUgdmFsdWUgdGhhdCBzaG91bGQgZ28gd2l0aCB0aGUgdmFsdWUgY29weSBidXR0b25cbiAgY29weVZhbHVlQm9keT86IHN0cmluZyB8IG51bWJlcjsgICAgLy8gVGhlIHZhbHVlIHRoYXQgYmUgY29waWVkIHdoZW4gdGhlIGxhYmVsIHZhbHVlIGJ1dHRvbiBpcyBjbGlja2VkXG4gIGNvcHlWYWx1ZURpc3BsYXlUcmFuc2Zvcm1hdGlvbj86IGFueTsgLy8gVGhlIHRyYW5zZm9ybWF0aW9uIHRoYXQgc2hvdWxkIGhhcHBlbiB0byB0aGUgY29weUxhYmVsRGlzcGxheVxuICBjb3B5VmFsdWVCb2R5VHJhbnNmb3JtYXRpb24/OiBhbnk7IC8vIFRoZSB0cmFuc2Zvcm1hdGlvbiB0aGF0IHNob3VsZCBoYXBwZW4gdG8gdGhlIGNvcHlMYWJlbEJvZHlcbiAgaGVscFRleHQ/OiBzdHJpbmc7ICAvLyBIZWxwZXIgVGV4dCBvbiB0aGUgcmlnaHQgc2lkZSBvZiBsYWJlbFxuICBpY29uPzogc3RyaW5nOyAgICAgICAgLy8gVXNlIGFuIGljb24gaW5zdGVhZCBvZiB0ZXh0LiBQYXNzIGluIGljb24gc3RyaW5nIGFzIE1hdGVyaWFscyhpY29uX2tleSkgb3IgUG9wKEEpXG4gIGxhYmVsQnV0dG9uPzogYm9vbGVhbjsgIC8vIERpc3BsYXkgdGhlIGxhYmVsIHdpdGggYSBidXR0b25cbiAgbGluaz86IGJvb2xlYW47ICAgICAgIC8vIFR1cm4gdGV4dC9pY29uIGludG8gYSByb3V0ZSBtZXRob2RcbiAgbGFiZWw6IHN0cmluZzsgICAgICAgICAgLy8gVGhlIGxhYmVsIFRleHQgb24gdGhlIGxlZnQgc2lkZVxuICBtZXRhZGF0YT86IG9iamVjdDsgICAgLy8gRGVzaXJlZCBNZXRhZGF0YVxuICBuYW1lPzogc3RyaW5nOyAgICAvLyB0aGUgZW50aXR5SWQgZmllbGQgbmFtZVxuICBwYXRjaD86IEZpZWxkSXRlbVBhdGNoSW50ZXJmYWNlOyAvLyBJZiBmaWVsZCBzaG91bGQgYmUgYXV0by1wYXRjaGVkLlxuICByb3V0ZT86IHN0cmluZzsgICAgICAgLy8gYSByb3V0ZXIgdXJsIHBhdGhcbiAgc3ViTGFiZWw/OiBzdHJpbmc7XG4gIHN1YlZhbHVlPzogc3RyaW5nO1xuICB0ZXh0T3ZlcmZsb3c/OiAnd3JhcCcgfCAnZWxsaXBzaXMnOyAgIC8vIFNldCB0aGUgdGV4dCBvdmVyZmxvdyBiZWhhdmlvciwgZGVmYXVsdCB3cmFwXG4gIHRydW5jYXRlPzogbnVtYmVyOyAgICAvLyBUcnVuY2F0ZSB0aGUgdGV4dCBhIGNoYXJhY3RlciBsZW5ndGhcbiAgdG9vbHRpcD86IHN0cmluZzsgICAgIC8vIFRvb2x0aXAgb24gdGhlIGxlZnQgc2lkZSBvZiB0aGUgdGV4dC9pY29uXG4gIHZhbHVlQnV0dG9uPzogYm9vbGVhbjsgIC8vIERpc3BsYXkgdGhlIHZhbHVlIHdpdGggYSBidXR0b25cbiAgdmFsdWVCdXR0b25EaXNwbGF5Pzogc3RyaW5nO1xuICB2YWx1ZUJ1dHRvbkRpc3BsYXlUcmFuc2Zvcm1hdGlvbj86IGFueTsgLy8gVGhlIHRyYW5zZm9ybWF0aW9uIHRoYXQgc2hvdWxkIGhhcHBlbiB0byB0aGUgdmFsdWVCdXR0b25EaXNwbGF5XG4gIHZhbHVlQnV0dG9uRGlzYWJsZWQ/OiBib29sZWFuOyAvLyBUaGUgdHJhbnNmb3JtYXRpb24gdGhhdCBzaG91bGQgaGFwcGVuIHRvIHRoZSB2YWx1ZUJ1dHRvbkRpc3BsYXlcbiAgdmFsdWU/OiBzdHJpbmcgfCBudW1iZXI7IC8vIFRoZSB0ZXh0IG9uIHRoZSByaWdodCBzaWRlXG5cbn1cblxuXG5leHBvcnQgY2xhc3MgTGFiZWxDb25maWcgaW1wbGVtZW50cyBTZXRDb250cm9sIHtcbiAgYnViYmxlID0gZmFsc2U7XG4gIGJ1dHRvbiA9IGZhbHNlO1xuICBib3JkZXIgPSBmYWxzZTtcbiAgY29udHJvbDtcbiAgY29weVZhbHVlID0gZmFsc2U7XG4gIGNvcHlWYWx1ZURpc3BsYXk/OiBzdHJpbmc7XG4gIGNvcHlWYWx1ZUJvZHk/OiBzdHJpbmcgfCBudW1iZXI7XG4gIGNvcHlWYWx1ZURpc3BsYXlUcmFuc2Zvcm1hdGlvbj86IHN0cmluZztcbiAgY29weVZhbHVlQm9keVRyYW5zZm9ybWF0aW9uPzogc3RyaW5nO1xuICBjb3B5TGFiZWwgPSBmYWxzZTtcbiAgY29weUxhYmVsRGlzcGxheT86IHN0cmluZztcbiAgY29weUxhYmVsQm9keT86IHN0cmluZyB8IG51bWJlcjtcbiAgY29weUxhYmVsRGlzcGxheVRyYW5zZm9ybWF0aW9uPzogc3RyaW5nO1xuICBjb3B5TGFiZWxCb2R5VHJhbnNmb3JtYXRpb24/OiBzdHJpbmc7XG4gIGh0bWwgPSAnbGFiZWwnO1xuICBoZWxwVGV4dCA9ICcnO1xuICBpY29uO1xuICBpY29uVHlwZSA9ICdtYXQnO1xuICBuYW1lID0gJ25hbWUnO1xuICBsYWJlbCA9ICdMYWJlbCc7XG4gIGxhYmVsQnV0dG9uPzogYm9vbGVhbjtcbiAgbGluayA9IGZhbHNlO1xuICBtZXRhZGF0YTtcbiAgcGF0Y2g6IEZpZWxkSXRlbVBhdGNoSW50ZXJmYWNlO1xuICByb3V0ZTtcbiAgc3ViTGFiZWwgPSAnJztcbiAgc3ViVmFsdWUgPSAnJztcbiAgdG9vbHRpcCA9ICcnO1xuICB0ZXh0T3ZlcmZsb3c/OiAnd3JhcCcgfCAnZWxsaXBzaXMnID0gJ3dyYXAnO1xuICB0cnVuY2F0ZSA9IDA7XG4gIHZhbHVlID0gJyc7XG4gIHZhbHVlQnV0dG9uID0gZmFsc2U7XG4gIHZhbHVlQnV0dG9uRGlzcGxheT86IHN0cmluZztcbiAgdmFsdWVCdXR0b25EaXNwbGF5VHJhbnNmb3JtYXRpb24/OiBhbnk7XG4gIHZhbHVlQnV0dG9uRGlzYWJsZWQgPSBmYWxzZTtcbiBcblxuXG5cbiAgY29uc3RydWN0b3IoIHBhcmFtcz86IExhYmVsQ29uZmlnSW50ZXJmYWNlICl7XG4gICAgaWYoIHBhcmFtcyApIGZvciggY29uc3QgaSBpbiBwYXJhbXMgKSB0aGlzWyBpIF0gPSBwYXJhbXNbIGkgXTtcbiAgICBpZiggdGhpcy5saW5rIHx8IHRoaXMucm91dGUgKSB0aGlzLmh0bWwgPSAnbGluayc7XG4gICAgaWYoICF0aGlzLnBhdGNoICkgdGhpcy5wYXRjaCA9IHsgZmllbGQ6ICcnLCBkdXJhdGlvbjogNzUwLCBwYXRoOiAnJywgZGlzYWJsZWQ6IGZhbHNlIH07XG4gICAgaWYoIHRoaXMucGF0Y2guZGlzcGxheUluZGljYXRvciAhPT0gZmFsc2UgKSB0aGlzLnBhdGNoLmRpc3BsYXlJbmRpY2F0b3IgPSB0cnVlO1xuICAgIGlmKCB0aGlzLmljb24gKXtcbiAgICAgIGlmKCB0aGlzLmljb24ubGVuZ3RoID09PSAxICl7XG4gICAgICAgIHRoaXMuaWNvbiA9IHRoaXMuaWNvbi50b1VwcGVyQ2FzZSgpO1xuICAgICAgICB0aGlzLmljb25UeXBlID0gJ3N3JztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuXG4gIHNldENvbnRyb2woKXtcbiAgICAvLyBtZWV0IHJlcXVpcmVtZW50XG4gIH1cbn1cblxuXG5leHBvcnQgY2xhc3MgTWV0YWRhdGFDb25maWcge1xuICBidWJibGUgPSBmYWxzZTtcbiAgdmFsdWU6IHN0cmluZyB8IG51bWJlciB8IGFueVtdID0gJyc7XG4gIGNvbnRyb2w6IEZvcm1Db250cm9sO1xuICBuYW1lO1xuXG5cbiAgY29uc3RydWN0b3IoIG5hbWU6IHN0cmluZywgdmFsdWU6IHN0cmluZyB8IG51bWJlciB8IGFueVtdICl7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgdGhpcy5jb250cm9sID0gbmV3IEZvcm1Db250cm9sKCB2YWx1ZSApO1xuICB9XG59XG4iXX0=