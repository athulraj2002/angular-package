import { FormControl } from '@angular/forms';
import { NumberConfig } from '../pop-number/number-config.model';
import { SwitchConfig } from '../pop-switch/switch-config.model';
export class MinMaxConfig {
    // No Defaults
    constructor(params) {
        // Defaults
        this.allowNegative = false;
        this.bubble = false;
        this.disabled = false;
        this.facade = false;
        this.helpText = '';
        this.id = '';
        this.label = 'Min/Max';
        this.limit = 100;
        this.minValue = 1;
        this.maxValue = 10;
        this.min = 1;
        this.max = 10;
        this.minColumn = 'min';
        this.maxColumn = 'max';
        this.minReadonly = false;
        this.maxReadonly = false;
        this.minRequired = false;
        this.maxRequired = false;
        this.minDefaultValue = 1;
        this.maxDefaultValue = 1;
        this.minLabel = 'Minimum';
        this.maxLabel = 'Maximum';
        this.message = '';
        this.showTooltip = false;
        this.tooltip = '';
        this.value = '';
        if (params)
            for (const i in params)
                this[i] = params[i];
        if (!this.patch)
            this.patch = { field: '', duration: 750, path: '', disabled: false };
        if (this.patch.displayIndicator !== false)
            this.patch.displayIndicator = true;
        // const maxOptions = [];
        // let maxLimit = this.limit;
        // while( maxLimit ){
        //   maxOptions.push({ value: maxLimit, name: maxLimit, sort: maxLimit });
        //   maxLimit--;
        // }
        if (this.limit && this.maxValue > this.limit)
            this.maxValue = +this.limit;
        this.isMaxConfig = new SwitchConfig({
            label: this.maxLabel,
            value: +this.maxValue ? true : this.maxRequired ? true : false,
            disabled: this.maxRequired ? true : false,
            bubble: true,
            facade: false,
            labelPosition: 'after',
        });
        this.maxConfig = new NumberConfig({
            label: null,
            value: +this.maxValue,
            min: this.min,
            max: this.max,
            readonly: this.maxReadonly,
            facade: true,
            minimal: true,
            bubble: true,
        });
        if (this.minValue > this.maxValue)
            this.minValue = this.maxValue;
        // let minLimit = this.maxValue;
        // const minOptions = [];
        // while( minLimit ){
        //   minOptions.push({ value: minLimit, name: minLimit, sort: minLimit });
        //   minLimit--;
        // }
        this.isMinConfig = new SwitchConfig({
            label: this.minLabel,
            value: +this.minValue ? true : this.minRequired ? true : false,
            disabled: this.minRequired ? true : false,
            bubble: true,
            facade: false,
            labelPosition: 'after',
        });
        this.minConfig = new NumberConfig({
            label: null,
            value: +this.minValue,
            min: this.min,
            max: this.max,
            readonly: this.minReadonly,
            facade: true,
            minimal: true,
            bubble: true,
        });
        if (!this.control)
            this.setControl();
    }
    setControl() {
        this.control = (this.disabled ? new FormControl({
            value: { min: this.minValue, max: this.maxValue },
            disabled: true
        }) : new FormControl(this.value, (this.validators ? this.validators : [])));
    }
}
//# sourceMappingURL=data:application/json;base64,