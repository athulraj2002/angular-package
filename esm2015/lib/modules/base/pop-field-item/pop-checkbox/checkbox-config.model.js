import { FormControl } from '@angular/forms';
export class CheckboxConfig {
    constructor(params) {
        this.align = 'right';
        this.bubble = false;
        this.disabled = false;
        this.displayErrors = true;
        this.facade = false;
        this.helpText = '';
        this.id = '';
        this.label = '';
        this.labelPosition = 'after';
        this.message = '';
        this.name = 'name';
        this.noInitialValue = false;
        this.options = { values: [] };
        this.tabOnEnter = false;
        this.toolTipDirection = 'right';
        this.textOverflow = 'wrap';
        this.value = false;
        if (params)
            for (const i in params)
                this[i] = params[i];
        if (this.label) {
            this.toolTipDirection = this.labelPosition === 'after' ? 'right' : 'left';
        }
        else {
            this.toolTipDirection = 'above';
        }
        if (['left', 'center', 'right',].indexOf(this.align) === -1)
            this.align = 'center';
        if (!this.patch)
            this.patch = { field: '', path: '', disabled: false, businessId: 0 };
        if (this.patch.displayIndicator !== false)
            this.patch.displayIndicator = true;
        if (this.noInitialValue)
            this.value = null;
        if (!this.control)
            this.setControl();
    }
    setControl() {
        this.control = this.disabled === true ? new FormControl({
            value: this.value,
            disabled: this.disabled
        }) : new FormControl(this.value, (this.validators ? this.validators : []));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtY29uZmlnLm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcG9wLWNvbW1vbi9zcmMvbGliL21vZHVsZXMvYmFzZS9wb3AtZmllbGQtaXRlbS9wb3AtY2hlY2tib3gvY2hlY2tib3gtY29uZmlnLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQWMsTUFBTSxnQkFBZ0IsQ0FBQztBQStCekQsTUFBTSxPQUFPLGNBQWM7SUE2QnpCLFlBQVksTUFBZ0M7UUEzQjVDLFVBQUssR0FBRyxPQUFPLENBQUM7UUFDaEIsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUVmLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsa0JBQWEsR0FBRyxJQUFJLENBQUM7UUFDckIsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUNmLGFBQVEsR0FBRyxFQUFFLENBQUM7UUFDZCxPQUFFLEdBQW9CLEVBQUUsQ0FBQztRQUN6QixVQUFLLEdBQUcsRUFBRSxDQUFDO1FBQ1gsa0JBQWEsR0FBRyxPQUFPLENBQUM7UUFDeEIsWUFBTyxHQUFHLEVBQUUsQ0FBQztRQUViLFNBQUksR0FBRyxNQUFNLENBQUM7UUFDZCxtQkFBYyxHQUFHLEtBQUssQ0FBQztRQUN2QixZQUFPLEdBQXNCLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxDQUFDO1FBTzVDLGVBQVUsR0FBRyxLQUFLLENBQUM7UUFDbkIscUJBQWdCLEdBQUcsT0FBTyxDQUFDO1FBQzNCLGlCQUFZLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLFVBQUssR0FBcUIsS0FBSyxDQUFDO1FBSTlCLElBQUksTUFBTTtZQUFHLEtBQUssTUFBTSxDQUFDLElBQUksTUFBTTtnQkFBRyxJQUFJLENBQUUsQ0FBQyxDQUFFLEdBQUcsTUFBTSxDQUFFLENBQUMsQ0FBRSxDQUFDO1FBQzlELElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsYUFBYSxLQUFLLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7U0FDM0U7YUFBSTtZQUNILElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxPQUFPLENBQUM7U0FDakM7UUFDRCxJQUFJLENBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUFHLElBQUksQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDO1FBQ3RGLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSztZQUFHLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFHLENBQUM7UUFDeEYsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixLQUFLLEtBQUs7WUFBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQztRQUMvRSxJQUFJLElBQUksQ0FBQyxjQUFjO1lBQUcsSUFBSSxDQUFDLEtBQUssR0FBSSxJQUFJLENBQUM7UUFDN0MsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPO1lBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3hDLENBQUM7SUFHRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsUUFBUSxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxXQUFXLENBQUM7WUFDdEQsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ2pCLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtTQUN4QixDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUUsQ0FBQyxDQUFDO0lBQy9FLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZvcm1Db250cm9sLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRmllbGRJdGVtT3B0aW9ucywgRmllbGRJdGVtUGF0Y2hJbnRlcmZhY2UgfSBmcm9tICcuLi8uLi8uLi8uLi9wb3AtY29tbW9uLm1vZGVsJztcbmltcG9ydCB7IFNldENvbnRyb2wgfSBmcm9tICcuLi8uLi8uLi8uLi9wb3AtY29tbW9uLWRvbS5tb2RlbHMnO1xuXG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2hlY2tib3hDb25maWdJbnRlcmZhY2Uge1xuIFxuICBhbGlnbj86IHN0cmluZzsgICAgICAgICAgICAgICAgICAvLyBXaXRoIG5vIGxhYmVsLCBhbGlnbiBjaGVja2JveCA8ICdsZWZ0JywgJ2NlbnRlcicsICdyaWdodCc7XG4gIGJ1YmJsZT86IGJvb2xlYW47ICAgICAgICAgICAgICAgLy8gZmlyZSBldmVudHNcbiAgY29udHJvbD86IEZvcm1Db250cm9sOyAgICAgICAgICAvLyBUaGUgZm9ybSBjb250cm9sLiBJZiBub3QgcGFzc2VkIG9uZSB3aWxsIGJlIGNyZWF0ZWQuXG4gIGRpc2FibGVkPzogYm9vbGVhbjsgICAgICAgICAgICAgLy8gTWFyayBhcyByZWFkb25seS5cbiAgZGlzcGxheUVycm9ycz86IGJvb2xlYW47ICAgICAgICAvLyBJZiBFcnJvciBtZXNzYWdlcyBzaG91bGQgYmUgZGlzcGxheWVkLlxuICBmYWNhZGU/OiBib29sZWFuOyAgICAgICAgICAgICAgIC8vIFNldHMgYSBmbGFnIHRoYXQgc2F5cyB0aGlzIGZpZWxkSXRlbXMgcmVhbGx5IGRvZXMgbm90IGV4aXN0IGluIHRoZSBiYWNrZW5kLCBhbmQgc2hvdWxkIG5vdCBwYXRjaCB0byB0aGUgYXBpXG4gIGhlbHBUZXh0Pzogc3RyaW5nOyAgICAgICAgICAgIC8vIE9uIGhvdmVyIGhlbHBlciB0ZXh0LlxuICBpZD86IG51bWJlciB8IHN0cmluZzsgICAgICAgICAgIC8vIEEgbnVtYmVyIHRoYXQgd2lsbCBiZSBpbmNsdWRlZCBpbiB0aGUgZXZlbnRzIHNvIHlvdSBrbm93IHdoaWNoIGZpZWxkIGl0IGNhbWUgZnJvbS5cbiAgbGFiZWw/OiBzdHJpbmc7ICAgICAgICAgICAgICAgICAvLyBJbnB1dCBsYWJlbC4gQSBsYWJlbCBpcyBvcHRpb25hbCwgY2hlY2tib3ggd2lsbCBjZW50ZXIgaW5zaWRlIHRoZSBjb250YWluZXIgd2l0aG91dCBhIGxhYmVsXG4gIGxhYmVsUG9zaXRpb24/OiBzdHJpbmc7ICAgICAgICAgIC8vIExhYmVsIGNhbiBiZSBwb3NpdGlvbmVkIHRvIGJlICdiZWZvcmUnIG9yICdhZnRlcicgdGhlIGNoZWNrYm94LiBEZWZhdWx0IGlzICdhZnRlcidcbiAgbWV0YWRhdGE/OiBvYmplY3Q7ICAgICAgICAgICAgICAvLyBBcnJheSBvZiBvYmplY3RzLiBUbyBiZSBwYXNzZWQgYmFjayBvbiB0aGUgZXZlbnQgZW1pdHRlciBhbmQgaW5jbHVkZWQgaW4gYSBwYXRjaCBpZiBkZXNpcmVkLlxuICBuYW1lPzogc3RyaW5nOyAgICAgICAgICAgICAgIC8vIHRoZSBlbnRpdHlJZCBmaWVsZCBuYW1lXG4gIG5vSW5pdGlhbFZhbHVlPzpib29sZWFuOyAgICAgICAgLy8gU2V0IHRvIHRydWUgdG8gYWx3YXlzIGhhdmUgYW4gZW1wdHkgdmFsdWUgb24gbG9hZFxuICBvcHRpb25zPzogRmllbGRJdGVtT3B0aW9uczsgICAgICAgIC8vIEFycmF5IG9mIEZpZWxkT3B0aW9uc1xuICBwYXRjaD86IEZpZWxkSXRlbVBhdGNoSW50ZXJmYWNlOyAgICAgICAgIC8vIElmIGZpZWxkIHNob3VsZCBiZSBhdXRvLXBhdGNoZWQuXG4gIHNlc3Npb24/OiBib29sZWFuOyAgICAgICAgICAgICAgICAvLyBJZiBmaWVsZCB2YWx1ZSBjaGFuZ2Ugc2hvdWxkIGJlIHN0b3JlZCB0byBjb3JlIGVudGl0eVxuICBzZXNzaW9uUGF0aD86IHN0cmluZzsgICAgICAgICAgICAgICAgLy8gSWYgc2Vzc2lvbiBwYXRoIGlmIG5vdCBzdG9yZWQgb24gcm9vdCBlbnRpdHlcbiAgdGFiT25FbnRlcj86Ym9vbGVhbjtcbiAgdGV4dE92ZXJmbG93Pzond3JhcCcgfCAnZWxsaXBzaXMnOyAgIC8vIFNldCB0aGUgdGV4dCBvdmVyZmxvdyBiZWhhdmlvciwgZGVmYXVsdCB3cmFwXG4gIHZhbGlkYXRvcnM/OiBBcnJheTxWYWxpZGF0b3JzPjsgLy8gQXJyYXkgb2YgVmFsaWRhdG9ycy5cbiAgdmFsdWU/OiBudW1iZXIgfCBib29sZWFuOyAgICAgICAgLy8gSW5pdGlhbCB2YWx1ZS5cbn1cblxuXG5leHBvcnQgY2xhc3MgQ2hlY2tib3hDb25maWcgaW1wbGVtZW50cyBTZXRDb250cm9sIHtcblxuICBhbGlnbiA9ICdyaWdodCc7XG4gIGJ1YmJsZSA9IGZhbHNlO1xuICBjb250cm9sOiBGb3JtQ29udHJvbDtcbiAgZGlzYWJsZWQgPSBmYWxzZTtcbiAgZGlzcGxheUVycm9ycyA9IHRydWU7XG4gIGZhY2FkZSA9IGZhbHNlO1xuICBoZWxwVGV4dCA9ICcnO1xuICBpZDogbnVtYmVyIHwgc3RyaW5nID0gJyc7XG4gIGxhYmVsID0gJyc7XG4gIGxhYmVsUG9zaXRpb24gPSAnYWZ0ZXInO1xuICBtZXNzYWdlID0gJyc7XG4gIG1ldGFkYXRhO1xuICBuYW1lID0gJ25hbWUnO1xuICBub0luaXRpYWxWYWx1ZSA9IGZhbHNlO1xuICBvcHRpb25zPzogRmllbGRJdGVtT3B0aW9ucyA9IHsgdmFsdWVzOiBbXSB9O1xuICBwYXRjaDtcbiAgcGF0Y2hTdWNjZXNzO1xuICBwYXRjaEZhaWw7XG4gIHNlc3Npb24/OiBib29sZWFuO1xuICBzZXNzaW9uUGF0aD86IHN0cmluZztcbiAgc3RhcnRQYXRjaDtcbiAgdGFiT25FbnRlciA9IGZhbHNlO1xuICB0b29sVGlwRGlyZWN0aW9uID0gJ3JpZ2h0JztcbiAgdGV4dE92ZXJmbG93ID0gJ3dyYXAnO1xuICB2YWx1ZTogbnVtYmVyIHwgYm9vbGVhbiA9IGZhbHNlO1xuICB2YWxpZGF0b3JzO1xuXG4gIGNvbnN0cnVjdG9yKHBhcmFtcz86IENoZWNrYm94Q29uZmlnSW50ZXJmYWNlKXtcbiAgICBpZiggcGFyYW1zICkgZm9yKCBjb25zdCBpIGluIHBhcmFtcyApIHRoaXNbIGkgXSA9IHBhcmFtc1sgaSBdO1xuICAgIGlmKCB0aGlzLmxhYmVsICl7XG4gICAgICB0aGlzLnRvb2xUaXBEaXJlY3Rpb24gPSB0aGlzLmxhYmVsUG9zaXRpb24gPT09ICdhZnRlcicgPyAncmlnaHQnIDogJ2xlZnQnO1xuICAgIH1lbHNle1xuICAgICAgdGhpcy50b29sVGlwRGlyZWN0aW9uID0gJ2Fib3ZlJztcbiAgICB9XG4gICAgaWYoIFsgJ2xlZnQnLCAnY2VudGVyJywgJ3JpZ2h0JywgXS5pbmRleE9mKHRoaXMuYWxpZ24pID09PSAtMSApIHRoaXMuYWxpZ24gPSAnY2VudGVyJztcbiAgICBpZiggIXRoaXMucGF0Y2ggKSB0aGlzLnBhdGNoID0geyBmaWVsZDogJycsIHBhdGg6ICcnLCBkaXNhYmxlZDogZmFsc2UsIGJ1c2luZXNzSWQ6IDAgIH07XG4gICAgaWYoIHRoaXMucGF0Y2guZGlzcGxheUluZGljYXRvciAhPT0gZmFsc2UgKSB0aGlzLnBhdGNoLmRpc3BsYXlJbmRpY2F0b3IgPSB0cnVlO1xuICAgIGlmKCB0aGlzLm5vSW5pdGlhbFZhbHVlICkgdGhpcy52YWx1ZSA9ICBudWxsO1xuICAgIGlmKCAhdGhpcy5jb250cm9sICkgdGhpcy5zZXRDb250cm9sKCk7XG4gIH1cblxuXG4gIHNldENvbnRyb2woKXtcbiAgICB0aGlzLmNvbnRyb2wgPSB0aGlzLmRpc2FibGVkID09PSB0cnVlID8gbmV3IEZvcm1Db250cm9sKHtcbiAgICAgIHZhbHVlOiB0aGlzLnZhbHVlLFxuICAgICAgZGlzYWJsZWQ6IHRoaXMuZGlzYWJsZWRcbiAgICB9KSA6IG5ldyBGb3JtQ29udHJvbCh0aGlzLnZhbHVlLCAoIHRoaXMudmFsaWRhdG9ycyA/IHRoaXMudmFsaWRhdG9ycyA6IFtdICkpO1xuICB9XG5cbn1cbiJdfQ==