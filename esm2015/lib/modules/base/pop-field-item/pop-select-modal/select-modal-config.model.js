import { FormControl } from '@angular/forms';
export class SelectModalConfig {
    constructor(params) {
        this.displayErrors = true;
        this.disabled = false;
        this.facade = false; // Sets a flag that says this fieldItems really does not exist in the backend, and just pretend to hit the api
        this.header = '';
        this.label = '';
        this.noInitialValue = false; // Set to true to always have an empty value on load
        if (params)
            for (const i in params)
                this[i] = params[i];
        // if( !this.label ) this.label = 'Options';
        if (!this.patch)
            this.patch = { field: '', duration: 750, path: '', disabled: false, json: false };
        if (this.patch.displayIndicator !== false)
            this.patch.displayIndicator = true;
        if (this.noInitialValue)
            this.value = this.list.multiple ? [] : '';
        if (!this.control)
            this.setControl();
    }
    setControl() {
        this.control = (this.disabled ? new FormControl({
            value: this.value,
            disabled: false
        }) : new FormControl(this.value, (this.validators ? this.validators : [])));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LW1vZGFsLWNvbmZpZy5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3BvcC1jb21tb24vc3JjL2xpYi9tb2R1bGVzL2Jhc2UvcG9wLWZpZWxkLWl0ZW0vcG9wLXNlbGVjdC1tb2RhbC9zZWxlY3QtbW9kYWwtY29uZmlnLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBRSxXQUFXLEVBQWUsTUFBTSxnQkFBZ0IsQ0FBQztBQW9CMUQsTUFBTSxPQUFPLGlCQUFpQjtJQWdCNUIsWUFBYSxNQUFtQztRQWRoRCxrQkFBYSxHQUFJLElBQUksQ0FBQztRQUN0QixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2pCLFdBQU0sR0FBSSxLQUFLLENBQUMsQ0FBdUMsOEdBQThHO1FBQ3JLLFdBQU0sR0FBRyxFQUFFLENBQUM7UUFFWixVQUFLLEdBQUcsRUFBRSxDQUFDO1FBRVgsbUJBQWMsR0FBRyxLQUFLLENBQUMsQ0FBZ0Msb0RBQW9EO1FBUXpHLElBQUksTUFBTTtZQUFHLEtBQUssTUFBTSxDQUFDLElBQUksTUFBTTtnQkFBRyxJQUFJLENBQUUsQ0FBQyxDQUFFLEdBQUcsTUFBTSxDQUFFLENBQUMsQ0FBRSxDQUFDO1FBQzlELDRDQUE0QztRQUM1QyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUs7WUFBRyxJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUM7UUFDcEcsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixLQUFLLEtBQUs7WUFBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQztRQUMvRSxJQUFJLElBQUksQ0FBQyxjQUFjO1lBQUcsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDcEUsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPO1lBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3hDLENBQUM7SUFHRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksV0FBVyxDQUFFO1lBQ2hELEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztZQUNqQixRQUFRLEVBQUUsS0FBSztTQUNoQixDQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksV0FBVyxDQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUUsQ0FBRSxDQUFFLENBQUM7SUFDcEYsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2VsZWN0TGlzdENvbmZpZyB9IGZyb20gJy4uL3BvcC1zZWxlY3QtbGlzdC9zZWxlY3QtbGlzdC1jb25maWcubW9kZWwnO1xuaW1wb3J0IHsgRmllbGRJdGVtUGF0Y2hJbnRlcmZhY2UgfSBmcm9tICcuLi8uLi8uLi8uLi9wb3AtY29tbW9uLm1vZGVsJztcbmltcG9ydCB7IFNldENvbnRyb2wgfSBmcm9tICcuLi8uLi8uLi8uLi9wb3AtY29tbW9uLWRvbS5tb2RlbHMnO1xuaW1wb3J0IHsgRm9ybUNvbnRyb2wsIFZhbGlkYXRvckZuIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5cbmV4cG9ydCBpbnRlcmZhY2UgU2VsZWN0TW9kYWxDb25maWdJbnRlcmZhY2Uge1xuICBidWJibGU/OiBib29sZWFuOyAgICAgICAgICAgICAgICAgLy8gQnViYmxlIEV2ZW50c1xuICBkaXNhYmxlZD86IGJvb2xlYW47ICAgICAgICAgICAgICAgLy8gTWFyayBhcyByZWFkb25seS5cbiAgZGlzcGxheUVycm9ycz86IGJvb2xlYW47ICAgICAgICAgLy8gSWYgRXJyb3IgbWVzc2FnZXMgc2hvdWxkIGJlIGRpc3BsYXllZC5cbiAgZmFjYWRlPzogYm9vbGVhbjsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTZXRzIGEgZmxhZyB0aGF0IHNheXMgdGhpcyBmaWVsZEl0ZW1zIHJlYWxseSBkb2VzIG5vdCBleGlzdCBpbiB0aGUgYmFja2VuZCwgYW5kIGp1c3QgcHJldGVuZCB0byBoaXQgdGhlIGFwaVxuICBoZWFkZXI/OiBzdHJpbmc7ICAgICAgICAgICAgICAgICAgIC8vIEhlYWRlciBvZiB0aGUgbW9kYWxcbiAgbGFiZWw/OiBzdHJpbmc7ICAgICAgICAgICAgICAgICAvLyBsYWJlbCBvZiBpbnB1dCB0cmlnZ2VyIGZpZWxkXG4gIHN1YkxhYmVsPzogc3RyaW5nOyAgICAgICAgICAgICAgICAgLy8gbGFiZWwgb2YgaW5wdXQgdHJpZ2dlciBmaWVsZFxuICBsaXN0PzogU2VsZWN0TGlzdENvbmZpZzsgICAgICAgICAgIC8vIHRoZSBzZWxlY3Rpb24gbGlzdCBpbnNpZGUgdGhlIG1vZGFsXG4gIHBhdGNoPzogRmllbGRJdGVtUGF0Y2hJbnRlcmZhY2U7ICAgICAgICAgICAgLy8gSWYgZmllbGQgc2hvdWxkIGJlIGF1dG8tcGF0Y2hlZC5cbiAgbWV0YWRhdGE/OiBvYmplY3Q7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFycmF5IG9mIG9iamVjdHMuIFRvIGJlIHBhc3NlZCBiYWNrIG9uIHRoZSBldmVudCBlbWl0dGVyIGFuZCBpbmNsdWRlZCBpbiBhIHBhdGNoIGlmIGRlc2lyZWQuXG4gIG5vSW5pdGlhbFZhbHVlPzogYm9vbGVhbjsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNldCB0byB0cnVlIHRvIGFsd2F5cyBoYXZlIGFuIGVtcHR5IHZhbHVlIG9uIGxvYWRcbiAgdmFsdWU/OiBBcnJheTxudW1iZXIgfCBzdHJpbmc+IHwgbnVtYmVyIHwgc3RyaW5nOyAgICAgICAgICAgICAgICAgICAgICAgICAvLyBJbml0aWFsIHZhbHVlLlxuICB2YWxpZGF0b3JzPzogQXJyYXk8VmFsaWRhdG9yRm4+O1xufVxuXG5cbmV4cG9ydCBjbGFzcyBTZWxlY3RNb2RhbENvbmZpZyBpbXBsZW1lbnRzIFNldENvbnRyb2wge1xuICBjb250cm9sOiBGb3JtQ29udHJvbDtcbiAgZGlzcGxheUVycm9ycz8gPSB0cnVlO1xuICBkaXNhYmxlZCA9IGZhbHNlO1xuICBmYWNhZGU/ID0gZmFsc2U7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2V0cyBhIGZsYWcgdGhhdCBzYXlzIHRoaXMgZmllbGRJdGVtcyByZWFsbHkgZG9lcyBub3QgZXhpc3QgaW4gdGhlIGJhY2tlbmQsIGFuZCBqdXN0IHByZXRlbmQgdG8gaGl0IHRoZSBhcGlcbiAgaGVhZGVyID0gJyc7XG4gIGxpc3Q6IFNlbGVjdExpc3RDb25maWc7XG4gIGxhYmVsID0gJyc7XG4gIG1ldGFkYXRhPzogb2JqZWN0OyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBcnJheSBvZiBvYmplY3RzLiBUbyBiZSBwYXNzZWQgYmFjayBvbiB0aGUgZXZlbnQgZW1pdHRlciBhbmQgaW5jbHVkZWQgaW4gYSBwYXRjaCBpZiBkZXNpcmVkLlxuICBub0luaXRpYWxWYWx1ZSA9IGZhbHNlOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2V0IHRvIHRydWUgdG8gYWx3YXlzIGhhdmUgYW4gZW1wdHkgdmFsdWUgb24gbG9hZFxuICBwYXRjaDogRmllbGRJdGVtUGF0Y2hJbnRlcmZhY2U7XG4gIHRyaWdnZXJPcGVuO1xuICB2YWxpZGF0b3JzPzogQXJyYXk8VmFsaWRhdG9yRm4+O1xuICB2YWx1ZT86IEFycmF5PG51bWJlciB8IHN0cmluZz4gfCBudW1iZXIgfCBzdHJpbmc7ICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEluaXRpYWwgdmFsdWUuXG5cblxuICBjb25zdHJ1Y3RvciggcGFyYW1zPzogU2VsZWN0TW9kYWxDb25maWdJbnRlcmZhY2UgKXtcbiAgICBpZiggcGFyYW1zICkgZm9yKCBjb25zdCBpIGluIHBhcmFtcyApIHRoaXNbIGkgXSA9IHBhcmFtc1sgaSBdO1xuICAgIC8vIGlmKCAhdGhpcy5sYWJlbCApIHRoaXMubGFiZWwgPSAnT3B0aW9ucyc7XG4gICAgaWYoICF0aGlzLnBhdGNoICkgdGhpcy5wYXRjaCA9IHsgZmllbGQ6ICcnLCBkdXJhdGlvbjogNzUwLCBwYXRoOiAnJywgZGlzYWJsZWQ6IGZhbHNlLCBqc29uOiBmYWxzZSB9O1xuICAgIGlmKCB0aGlzLnBhdGNoLmRpc3BsYXlJbmRpY2F0b3IgIT09IGZhbHNlICkgdGhpcy5wYXRjaC5kaXNwbGF5SW5kaWNhdG9yID0gdHJ1ZTtcbiAgICBpZiggdGhpcy5ub0luaXRpYWxWYWx1ZSApIHRoaXMudmFsdWUgPSB0aGlzLmxpc3QubXVsdGlwbGUgPyBbXSA6ICcnO1xuICAgIGlmKCAhdGhpcy5jb250cm9sICkgdGhpcy5zZXRDb250cm9sKCk7XG4gIH1cblxuXG4gIHNldENvbnRyb2woKXtcbiAgICB0aGlzLmNvbnRyb2wgPSAoIHRoaXMuZGlzYWJsZWQgPyBuZXcgRm9ybUNvbnRyb2woIHtcbiAgICAgIHZhbHVlOiB0aGlzLnZhbHVlLFxuICAgICAgZGlzYWJsZWQ6IGZhbHNlXG4gICAgfSApIDogbmV3IEZvcm1Db250cm9sKCB0aGlzLnZhbHVlLCAoIHRoaXMudmFsaWRhdG9ycyA/IHRoaXMudmFsaWRhdG9ycyA6IFtdICkgKSApO1xuICB9XG59XG5cbiJdfQ==