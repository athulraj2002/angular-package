import { Component, ElementRef, Input, } from '@angular/core';
import { PopEntityFieldBoilerComponent as FieldTemplate } from '../pop-entity-field-boiler.component';
import { PopDomService } from '../../../../services/pop-dom.service';
import { NameFieldSetting } from './name.setting';
export class PopEntityNameComponent extends FieldTemplate {
    constructor(el, _domRepo) {
        super(el, _domRepo, NameFieldSetting);
        this.el = el;
        this._domRepo = _domRepo;
        this.name = 'PopEntityNameComponent';
    }
    /**
     * This component should have a specific purpose
     */
    ngOnInit() {
        super.ngOnInit();
    }
    /**
     * The dom destroy function manages all the clean up that is necessary if subscriptions, timeouts, etc are stored properly
     */
    ngOnDestroy() {
        super.ngOnDestroy();
    }
}
PopEntityNameComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-pop-entity-name',
                template: "<div class=\"pop-entity-name import-field-container\">\n  <div class=\"import-flex-column import-field-flex-row-offset\" *ngFor=\"let dataKey of field.data_keys\">\n    <div *ngIf=\"field.items[dataKey].config; let items;\">\n      <div *ngIf=\"dom.state.loaded && ui.asset[dataKey]; let asset\">\n        <div *ngIf=\"dom.state[dataKey]; let state;\">\n\n          <div class=\"import-flex-row import-field-flex-row-offset\">\n            <div class=\"import-flex-row-wrap\">\n              <div class=\"import-field import-field-spacing import-flex-item-sm import-flex-grow-sm\">\n                <lib-pop-input class=\"pop-entity-name-display\" [config]=\"asset.display\"></lib-pop-input>\n              </div>\n              <div *ngIf=\"true\" class=\"import-field import-flex-item-icon\">\n                <lib-pop-entity-field-edit-icon\n                  (events)=\"onActionEvent($event, dataKey);\" [field]=\"this.field\"\n                  [dom]=\"dom\"\n                ></lib-pop-entity-field-edit-icon>\n              </div>\n            </div>\n          </div>\n\n\n          <div *ngIf=\"state.open\" class=\"import-flex-row-wrap pt-02 sw-pad-lft-sm sw-pad-rgt-sm  sw-mar-top-sm\">\n\n            <!--<div *ngIf=\"field.multiple && field.setting.edit_label && asset.entry; let entry;\" class=\"import-field import-field-spacing import-flex-item-sm import-flex-grow-sm\">-->\n              <!--<lib-pop-select [config]=\"entry\"></lib-pop-select>-->\n            <!--</div>-->\n            <!--<div *ngIf=\"state.customLabel && asset.customLabel; let item;\" class=\"import-field import-field-spacing import-flex-item-sm import-flex-grow-sm\">-->\n              <!--<lib-pop-input [config]=\"item\"></lib-pop-input>-->\n            <!--</div>-->\n            <!--<div class=\"import-flex-row-break\"></div>-->\n\n\n            <div *ngIf=\"items['prefix']\" class=\"import-field import-field-spacing import-flex-item-sm import-flex-grow-md\">\n              <lib-pop-input [config]=\"items['prefix']\" (events)=\"onFieldItemEvent($event, dataKey, 'prefix');\"></lib-pop-input>\n            </div>\n\n            <div *ngIf=\"items['first']\" class=\"import-field import-field-spacing import-flex-item-md import-flex-grow-lg\">\n              <lib-pop-input [config]=\"items['first']\" (events)=\"onFieldItemEvent($event, dataKey, 'first');\"></lib-pop-input>\n            </div>\n\n            <div class=\"import-flex-row-break\" *ngIf=\"items['prefix'] && field.items['middle']\"></div>\n\n            <div *ngIf=\"items['middle']\" class=\"import-field import-field-spacing import-flex-item-sm import-flex-grow-md\">\n              <lib-pop-input [config]=\"items['middle']\" (events)=\"onFieldItemEvent($event, dataKey, 'middle');\"></lib-pop-input>\n            </div>\n\n            <div class=\"import-flex-row-break\" *ngIf=\"!field.items['prefix'] && !field.items['middle']\"></div>\n\n            <div *ngIf=\"items['last']\" class=\"import-field import-field-spacing import-flex-item-md import-flex-grow-lg\">\n              <lib-pop-input [config]=\"items['last']\" (events)=\"onFieldItemEvent($event, dataKey, 'last');\"></lib-pop-input>\n            </div>\n\n            <div class=\"import-flex-row-break\" *ngIf=\"items['prefix'] && field.items['first'] && field.items['middle'] && field.items['last']\"></div>\n\n            <div *ngIf=\"items['suffix']\" class=\"import-field import-field-spacing import-flex-item-sm import-flex-grow-md\">\n              <lib-pop-input [config]=\"items['suffix']\" (events)=\"onFieldItemEvent($event, dataKey, 'suffix');\"></lib-pop-input>\n            </div>\n\n            <div *ngIf=\"items['suffix']\" class=\"import-field import-field-spacing import-flex-item-md import-flex-grow-lg\"></div>\n\n            <!--<div class=\"import-field-footer\" [ngClass]=\"{'import-field-footer-adjust': !field.multiple || field.items['first'] && field.items['middle'] && field.items['last'] && field.items['suffix']}\">-->\n            <div class=\"import-field-footer sw-mar-top-md\" *ngIf=\"field.canRemove\">\n              <lib-pop-field-btn class=\"sw-mar-rgt-lg\" action=\"remove\" [field]=\"field\" (events)=\"onActionEvent($event, dataKey);\"></lib-pop-field-btn>\n            </div>\n\n            <div class=\"import-flex-row-wrap import-flex-end sw-mar-top-lg sw-pad-rgt-lg sw-pad-btm-sm\">\n              <lib-pop-button\n                [config]=\"{value:'Close', size: 30, color: 'accent', bubble: true, event: 'close'}\"\n                (events)=\"onActionEvent($event, dataKey);\"\n              ></lib-pop-button>\n            </div>\n\n          </div>\n\n        </div>\n\n\n      </div>\n\n    </div>\n  </div>\n</div>\n\n",
                styles: [""]
            },] }
];
PopEntityNameComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: PopDomService }
];
PopEntityNameComponent.propDecorators = {
    field: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wLWVudGl0eS1uYW1lLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3BvcC1jb21tb24vc3JjL2xpYi9tb2R1bGVzL2VudGl0eS9wb3AtZW50aXR5LWZpZWxkL3BvcC1lbnRpdHktbmFtZS9wb3AtZW50aXR5LW5hbWUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssR0FBc0IsTUFBTSxlQUFlLENBQUM7QUFHakYsT0FBTyxFQUFFLDZCQUE2QixJQUFJLGFBQWEsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ3RHLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQVFsRCxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsYUFBYTtJQU12RCxZQUNTLEVBQWMsRUFDWCxRQUF1QjtRQUVqQyxLQUFLLENBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1FBSC9CLE9BQUUsR0FBRixFQUFFLENBQVk7UUFDWCxhQUFRLEdBQVIsUUFBUSxDQUFlO1FBTDVCLFNBQUksR0FBRyx3QkFBd0IsQ0FBQztJQVF2QyxDQUFDO0lBR0Q7O09BRUc7SUFDSCxRQUFRO1FBQ04sS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ25CLENBQUM7SUFHRDs7T0FFRztJQUNILFdBQVc7UUFDVCxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDdEIsQ0FBQzs7O1lBaENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQiwwbUpBQStDOzthQUVoRDs7O1lBWm1CLFVBQVU7WUFJckIsYUFBYTs7O29CQVVuQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBFbnRpdHlGaWVsZENvbXBvbmVudEludGVyZmFjZSB9IGZyb20gJy4uL3BvcC1lbnRpdHktZmllbGQubW9kZWwnO1xuaW1wb3J0IHsgRmllbGRDb25maWcgfSBmcm9tICcuLi8uLi8uLi8uLi9wb3AtY29tbW9uLm1vZGVsJztcbmltcG9ydCB7IFBvcEVudGl0eUZpZWxkQm9pbGVyQ29tcG9uZW50IGFzIEZpZWxkVGVtcGxhdGUgfSBmcm9tICcuLi9wb3AtZW50aXR5LWZpZWxkLWJvaWxlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgUG9wRG9tU2VydmljZSB9IGZyb20gJy4uLy4uLy4uLy4uL3NlcnZpY2VzL3BvcC1kb20uc2VydmljZSc7XG5pbXBvcnQgeyBOYW1lRmllbGRTZXR0aW5nIH0gZnJvbSAnLi9uYW1lLnNldHRpbmcnO1xuXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xpYi1wb3AtZW50aXR5LW5hbWUnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG9wLWVudGl0eS1uYW1lLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbICcuL3BvcC1lbnRpdHktbmFtZS5jb21wb25lbnQuc2NzcycgXSxcbn0pXG5leHBvcnQgY2xhc3MgUG9wRW50aXR5TmFtZUNvbXBvbmVudCBleHRlbmRzIEZpZWxkVGVtcGxhdGUgaW1wbGVtZW50cyBFbnRpdHlGaWVsZENvbXBvbmVudEludGVyZmFjZSwgT25Jbml0LCBPbkRlc3Ryb3kgIHtcbiAgQElucHV0KCkgZmllbGQ6IEZpZWxkQ29uZmlnO1xuXG4gIHB1YmxpYyBuYW1lID0gJ1BvcEVudGl0eU5hbWVDb21wb25lbnQnO1xuXG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGVsOiBFbGVtZW50UmVmLFxuICAgIHByb3RlY3RlZCBfZG9tUmVwbzogUG9wRG9tU2VydmljZVxuICApe1xuICAgIHN1cGVyKGVsLCBfZG9tUmVwbywgTmFtZUZpZWxkU2V0dGluZyk7XG4gIH1cblxuXG4gIC8qKlxuICAgKiBUaGlzIGNvbXBvbmVudCBzaG91bGQgaGF2ZSBhIHNwZWNpZmljIHB1cnBvc2VcbiAgICovXG4gIG5nT25Jbml0KCl7XG4gICAgc3VwZXIubmdPbkluaXQoKTtcbiAgfVxuXG5cbiAgLyoqXG4gICAqIFRoZSBkb20gZGVzdHJveSBmdW5jdGlvbiBtYW5hZ2VzIGFsbCB0aGUgY2xlYW4gdXAgdGhhdCBpcyBuZWNlc3NhcnkgaWYgc3Vic2NyaXB0aW9ucywgdGltZW91dHMsIGV0YyBhcmUgc3RvcmVkIHByb3Blcmx5XG4gICAqL1xuICBuZ09uRGVzdHJveSgpe1xuICAgIHN1cGVyLm5nT25EZXN0cm95KCk7XG4gIH1cblxufVxuIl19