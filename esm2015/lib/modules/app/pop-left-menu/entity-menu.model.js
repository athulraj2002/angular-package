import { IsString } from '../../../pop-common-utility';
export class EntityMenu {
    constructor(args) {
        this.id = args.id || 0;
        this.description = args.description || '';
        this.name = args.name;
        this.entity_id = args.entity_id || null;
        this.path = args.path;
        this.short_description = args.short_description || '';
        this.sort = args.sort || 0;
        this.internal_name = args.internal_name || null;
        this.hasAlias = args.hasAlias ? true : false;
        this.originalPath = args.originalPath;
        this.originalName = args.originalName;
        if (IsString(args.icon, true)) {
            this.icon = args.icon;
            this._setIcon();
        }
        else {
            this._setCharacters();
        }
    }
    _setPath() {
        const pathSet = this.path.split("/");
        this.path = '/' + pathSet[pathSet.length - 1];
    }
    _setIcon() {
        const iconSet = this.icon.split(":");
        if (iconSet.length === 2) {
            [this.iconType, this.icon] = iconSet;
        }
    }
    _setCharacters() {
        this.character_icon = "";
        const nameArray = this.name.split(" ");
        if (nameArray.length >= 2) {
            this.character_icon += nameArray[0].charAt(0).toLocaleUpperCase();
            this.character_icon += nameArray[1].charAt(0).toLocaleUpperCase();
        }
        else {
            this.character_icon += this.name.charAt(0).toLocaleUpperCase();
            this.character_icon += this.name.charAt(1).toLocaleLowerCase();
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5LW1lbnUubW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9wb3AtY29tbW9uL3NyYy9saWIvbW9kdWxlcy9hcHAvcG9wLWxlZnQtbWVudS9lbnRpdHktbWVudS5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFHdkQsTUFBTSxPQUFPLFVBQVU7SUFpQnJCLFlBQ0UsSUFhQztRQUVELElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDdkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsV0FBVyxJQUFJLEVBQUUsQ0FBQztRQUMxQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDdEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQztRQUN4QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDdEIsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxpQkFBaUIsSUFBSSxFQUFFLENBQUM7UUFDdEQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQztRQUMzQixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxhQUFhLElBQUksSUFBSSxDQUFDO1FBQ2hELElBQUksQ0FBQyxRQUFRLEdBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFBLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDN0MsSUFBSSxDQUFDLFlBQVksR0FBSSxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxZQUFZLEdBQUksSUFBSSxDQUFDLFlBQVksQ0FBQztRQUN2QyxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxFQUFFO1lBQzdCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztZQUN0QixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDakI7YUFDRztZQUNGLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztTQUN2QjtJQUNILENBQUM7SUFHTyxRQUFRO1FBQ2QsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDckMsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLEdBQUcsT0FBTyxDQUFFLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFFLENBQUM7SUFDbEQsQ0FBQztJQUdPLFFBQVE7UUFDZCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNyQyxJQUFJLE9BQU8sQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ3hCLENBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFFLEdBQUcsT0FBTyxDQUFDO1NBQ3hDO0lBQ0gsQ0FBQztJQUdPLGNBQWM7UUFDcEIsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7UUFDekIsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdkMsSUFBSSxTQUFTLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtZQUN6QixJQUFJLENBQUMsY0FBYyxJQUFJLFNBQVMsQ0FBRSxDQUFDLENBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztZQUNwRSxJQUFJLENBQUMsY0FBYyxJQUFJLFNBQVMsQ0FBRSxDQUFDLENBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztTQUNyRTthQUNHO1lBQ0YsSUFBSSxDQUFDLGNBQWMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1lBQy9ELElBQUksQ0FBQyxjQUFjLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztTQUNoRTtJQUNILENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElzU3RyaW5nIH0gZnJvbSAnLi4vLi4vLi4vcG9wLWNvbW1vbi11dGlsaXR5JztcblxuXG5leHBvcnQgY2xhc3MgRW50aXR5TWVudSB7XG4gIHB1YmxpYyBpZDogbnVtYmVyO1xuICBwdWJsaWMgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIHB1YmxpYyBlbnRpdHlfaWQ/Om51bWJlcjtcbiAgcHVibGljIGljb24/OiBzdHJpbmc7XG4gIHB1YmxpYyBpY29uVHlwZT86IHN0cmluZztcbiAgcHVibGljIG5hbWU6IHN0cmluZztcbiAgcHVibGljIHBhdGg6IHN0cmluZztcbiAgcHVibGljIHNob3J0X2Rlc2NyaXB0aW9uOiBzdHJpbmc7XG4gIHB1YmxpYyBpbnRlcm5hbF9uYW1lOiBzdHJpbmc7XG4gIHB1YmxpYyBzb3J0OiBudW1iZXI7XG4gIHB1YmxpYyBjaGFyYWN0ZXJfaWNvbjogc3RyaW5nO1xuICBoYXNBbGlhczogYm9vbGVhbjtcbiAgb3JpZ2luYWxQYXRoOiBzdHJpbmc7XG4gIG9yaWdpbmFsTmFtZTogc3RyaW5nO1xuXG5cbiAgY29uc3RydWN0b3IoXG4gICAgYXJnczoge1xuICAgICAgaWQ/OiBudW1iZXIsXG4gICAgICBkZXNjcmlwdGlvbj86IHN0cmluZyxcbiAgICAgIGVudGl0eV9pZD86bnVtYmVyLFxuICAgICAgaWNvbj86IHN0cmluZyxcbiAgICAgIG5hbWU6IHN0cmluZyxcbiAgICAgIHBhdGg6IHN0cmluZyxcbiAgICAgIHNob3J0X2Rlc2NyaXB0aW9uOiBzdHJpbmcsXG4gICAgICBpbnRlcm5hbF9uYW1lPzogc3RyaW5nO1xuICAgICAgc29ydDogbnVtYmVyLFxuICAgICAgaGFzQWxpYXM/OiBib29sZWFuO1xuICAgICAgb3JpZ2luYWxQYXRoPzogc3RyaW5nO1xuICAgICAgb3JpZ2luYWxOYW1lPzogc3RyaW5nO1xuICAgIH1cbiAgKXtcbiAgICB0aGlzLmlkID0gYXJncy5pZCB8fCAwO1xuICAgIHRoaXMuZGVzY3JpcHRpb24gPSBhcmdzLmRlc2NyaXB0aW9uIHx8ICcnO1xuICAgIHRoaXMubmFtZSA9IGFyZ3MubmFtZTtcbiAgICB0aGlzLmVudGl0eV9pZCA9IGFyZ3MuZW50aXR5X2lkIHx8IG51bGw7XG4gICAgdGhpcy5wYXRoID0gYXJncy5wYXRoO1xuICAgIHRoaXMuc2hvcnRfZGVzY3JpcHRpb24gPSBhcmdzLnNob3J0X2Rlc2NyaXB0aW9uIHx8ICcnO1xuICAgIHRoaXMuc29ydCA9IGFyZ3Muc29ydCB8fCAwO1xuICAgIHRoaXMuaW50ZXJuYWxfbmFtZSA9IGFyZ3MuaW50ZXJuYWxfbmFtZSB8fCBudWxsO1xuICAgIHRoaXMuaGFzQWxpYXMgPSAgYXJncy5oYXNBbGlhcyA/IHRydWU6IGZhbHNlO1xuICAgIHRoaXMub3JpZ2luYWxQYXRoID0gIGFyZ3Mub3JpZ2luYWxQYXRoO1xuICAgIHRoaXMub3JpZ2luYWxOYW1lID0gIGFyZ3Mub3JpZ2luYWxOYW1lO1xuICAgIGlmKCBJc1N0cmluZyhhcmdzLmljb24sIHRydWUpICl7XG4gICAgICB0aGlzLmljb24gPSBhcmdzLmljb247XG4gICAgICB0aGlzLl9zZXRJY29uKCk7XG4gICAgfVxuICAgIGVsc2V7XG4gICAgICB0aGlzLl9zZXRDaGFyYWN0ZXJzKCk7XG4gICAgfVxuICB9XG5cblxuICBwcml2YXRlIF9zZXRQYXRoKCl7XG4gICAgY29uc3QgcGF0aFNldCA9IHRoaXMucGF0aC5zcGxpdChcIi9cIik7XG4gICAgdGhpcy5wYXRoID0gJy8nICsgcGF0aFNldFsgcGF0aFNldC5sZW5ndGggLSAxIF07XG4gIH1cblxuXG4gIHByaXZhdGUgX3NldEljb24oKXtcbiAgICBjb25zdCBpY29uU2V0ID0gdGhpcy5pY29uLnNwbGl0KFwiOlwiKTtcbiAgICBpZiggaWNvblNldC5sZW5ndGggPT09IDIgKXtcbiAgICAgIFsgdGhpcy5pY29uVHlwZSwgdGhpcy5pY29uIF0gPSBpY29uU2V0O1xuICAgIH1cbiAgfVxuXG5cbiAgcHJpdmF0ZSBfc2V0Q2hhcmFjdGVycygpe1xuICAgIHRoaXMuY2hhcmFjdGVyX2ljb24gPSBcIlwiO1xuICAgIGNvbnN0IG5hbWVBcnJheSA9IHRoaXMubmFtZS5zcGxpdChcIiBcIik7XG4gICAgaWYoIG5hbWVBcnJheS5sZW5ndGggPj0gMiApe1xuICAgICAgdGhpcy5jaGFyYWN0ZXJfaWNvbiArPSBuYW1lQXJyYXlbIDAgXS5jaGFyQXQoMCkudG9Mb2NhbGVVcHBlckNhc2UoKTtcbiAgICAgIHRoaXMuY2hhcmFjdGVyX2ljb24gKz0gbmFtZUFycmF5WyAxIF0uY2hhckF0KDApLnRvTG9jYWxlVXBwZXJDYXNlKCk7XG4gICAgfVxuICAgIGVsc2V7XG4gICAgICB0aGlzLmNoYXJhY3Rlcl9pY29uICs9IHRoaXMubmFtZS5jaGFyQXQoMCkudG9Mb2NhbGVVcHBlckNhc2UoKTtcbiAgICAgIHRoaXMuY2hhcmFjdGVyX2ljb24gKz0gdGhpcy5uYW1lLmNoYXJBdCgxKS50b0xvY2FsZUxvd2VyQ2FzZSgpO1xuICAgIH1cbiAgfVxufVxuXG4iXX0=