import { BehaviorSubject } from 'rxjs';
export class CacFilterBarConfig {
    constructor(params) {
        this.archived = false;
        this.active = false;
        this.display = 'default';
        this.loader = false;
        this.view = ['client', 'account', 'campaign'];
        this.sortToTop = false;
        this.invalid = false;
        if (params)
            for (const i in params)
                this[i] = params[i];
        if (!(['default', 'static', 'float'].includes(this.display)))
            this.display = 'default';
    }
}
export class CacFilterBarEntityConfig {
    constructor(params) {
        /**/
        this.allSelected = false;
        this.checkAll = false;
        this.indeterminate = false;
        this.single = true;
        this.selected = {};
        this.display = {};
        this.hidden = {};
        this.filter = [];
        this.selectedText = '';
        this.displaySelectedText = '';
        this.totalText = '';
        this.mode = false;
        this.visible = false;
        for (const i in params)
            this[i] = params[i];
        this.feed = new BehaviorSubject([]);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wLWNhYy1maWx0ZXIubW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9wb3AtY29tbW9uL3NyYy9saWIvbW9kdWxlcy9hcHAvcG9wLWNhYy1maWx0ZXIvcG9wLWNhYy1maWx0ZXIubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQWV2QyxNQUFNLE9BQU8sa0JBQWtCO0lBWTdCLFlBQVksTUFBOEI7UUFYMUMsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixXQUFNLEdBQUcsS0FBSyxDQUFDO1FBR2YsWUFBTyxHQUFtQyxTQUFTLENBQUM7UUFDcEQsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUNmLFNBQUksR0FBYSxDQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsVUFBVSxDQUFFLENBQUM7UUFDckQsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUNsQixZQUFPLEdBQUcsS0FBSyxDQUFDO1FBSWQsSUFBSSxNQUFNO1lBQUcsS0FBSyxNQUFNLENBQUMsSUFBSSxNQUFNO2dCQUFHLElBQUksQ0FBRSxDQUFDLENBQUUsR0FBRyxNQUFNLENBQUUsQ0FBQyxDQUFFLENBQUM7UUFDOUQsSUFBSSxDQUFDLENBQUUsQ0FBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUU7WUFBRyxJQUFJLENBQUMsT0FBTyxHQUFHLFNBQVMsQ0FBQztJQUM5RixDQUFDO0NBQ0Y7QUFpQkQsTUFBTSxPQUFPLHdCQUF3QjtJQTZCbkMsWUFBWSxNQUFtQztRQTVCL0MsSUFBSTtRQUNKLGdCQUFXLEdBQUcsS0FBSyxDQUFDO1FBTXBCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFPakIsa0JBQWEsR0FBRyxLQUFLLENBQUM7UUFDdEIsV0FBTSxHQUFHLElBQUksQ0FBQztRQUNkLGFBQVEsR0FBb0IsRUFBRSxDQUFDO1FBQy9CLFlBQU8sR0FBb0IsRUFBRSxDQUFDO1FBQzlCLFdBQU0sR0FBb0IsRUFBRSxDQUFDO1FBQzdCLFdBQU0sR0FBVSxFQUFFLENBQUM7UUFDbkIsaUJBQVksR0FBRyxFQUFFLENBQUM7UUFDbEIsd0JBQW1CLEdBQUcsRUFBRSxDQUFDO1FBQ3pCLGNBQVMsR0FBRyxFQUFFLENBQUM7UUFDZixTQUFJLEdBQUcsS0FBSyxDQUFDO1FBQ2IsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUtkLEtBQUssTUFBTSxDQUFDLElBQUksTUFBTTtZQUFHLElBQUksQ0FBRSxDQUFDLENBQUUsR0FBRyxNQUFNLENBQUUsQ0FBQyxDQUFFLENBQUM7UUFDakQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLGVBQWUsQ0FBcUIsRUFBRSxDQUFDLENBQUM7SUFDMUQsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBFbnRpdHlGaWx0ZXJJbnRlcmZhY2UsIEtleU1hcCB9IGZyb20gJy4uLy4uLy4uL3BvcC1jb21tb24ubW9kZWwnO1xuXG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2FjRmlsdGVyQmFySW50ZXJmYWNlIHtcbiAgYXBwPzogc3RyaW5nO1xuICBlbnRpdHlfcGF0aD86IHN0cmluZzsgICAgICAgICAgICAgICAgICAvLyBOYW1lIG9mIHRoZSBlbnRpdHlJZCBjbGllbnQsIGFjY291bnQsIGNhbXBhaWduIC4uLi5cbiAgZGlzcGxheT86IHN0cmluZzsgICAgICAgICAgICAgICAgLy8gZGVmYXVsdCAodG9nZ2xlcyksIHN0YXRpYyhhbHdheXMgb3BlbiksIGZsb2F0KGZpbHRlciBiYXIgZmxvYXRzKVxuICBhcmNoaXZlZD86IGJvb2xlYW47ICAgICAgICAgICAvLyBTZXQgd2hldGhlciBhcmNoaXZlZCBpdGVtcyBzaG91bGQgYmUgbG9va2VkIGF0XG4gIGFjdGl2ZT86IGJvb2xlYW47ICAgICAgICAgICAvLyBTZXQgd2hldGhlciB0aGUgZmlsdGVyIHNob3VsZCBiZSBzaG93blxuICBsb2FkZXI/OiBib29sZWFuOyAgICAgICAgICAgLy8gU2V0IHdoZXRoZXIgdGhlIGZpbHRlciBzaG91bGQgYmUgc2hvd25cbiAgc29ydFRvVG9wPzogYm9vbGVhbjtcbn1cblxuXG5leHBvcnQgY2xhc3MgQ2FjRmlsdGVyQmFyQ29uZmlnIHtcbiAgYXJjaGl2ZWQgPSBmYWxzZTtcbiAgYWN0aXZlID0gZmFsc2U7XG4gIGFwaT86IEVudGl0eUZpbHRlckludGVyZmFjZVtdO1xuICBhcHA6IHN0cmluZztcbiAgZGlzcGxheTogJ2RlZmF1bHQnIHwgJ3N0YXRpYycgfCAnZmxvYXQnID0gJ2RlZmF1bHQnO1xuICBsb2FkZXIgPSBmYWxzZTtcbiAgdmlldzogc3RyaW5nW10gPSBbICdjbGllbnQnLCAnYWNjb3VudCcsICdjYW1wYWlnbicgXTtcbiAgc29ydFRvVG9wID0gZmFsc2U7XG4gIGludmFsaWQgPSBmYWxzZTtcblxuXG4gIGNvbnN0cnVjdG9yKHBhcmFtcz86IENhY0ZpbHRlckJhckludGVyZmFjZSl7XG4gICAgaWYoIHBhcmFtcyApIGZvciggY29uc3QgaSBpbiBwYXJhbXMgKSB0aGlzWyBpIF0gPSBwYXJhbXNbIGkgXTtcbiAgICBpZiggISggWyAnZGVmYXVsdCcsICdzdGF0aWMnLCAnZmxvYXQnIF0uaW5jbHVkZXModGhpcy5kaXNwbGF5KSApICkgdGhpcy5kaXNwbGF5ID0gJ2RlZmF1bHQnO1xuICB9XG59XG5cblxuZXhwb3J0IGludGVyZmFjZSBDYWNGaWx0ZXJCYXJFbnRpdHlJbnRlcmZhY2Uge1xuICBpbnRlcm5hbF9uYW1lOiBzdHJpbmc7ICAgICAgICAgICAgICAgICAgLy8gTmFtZSBvZiB0aGUgZW50aXR5IGNsaWVudCwgYWNjb3VudCwgY2FtcGFpZ24gLi4uLlxuICBwYXJlbnRfbGluazogc3RyaW5nIHwgbnVsbDsgLy8gY29sdW1uIHRoYXQgY3JlYXRlcyB0aGUgcGFyZW50L2NoaWxkIHJlbGF0aW9uc2hpcCB0byB0aGUgbmV4dCBlbnRpdHlcbiAgY2hpbGRfbGluazogc3RyaW5nIHwgbnVsbDsgLy8gY29sdW1uIHRoYXQgY3JlYXRlcyB0aGUgcGFyZW50L2NoaWxkIHJlbGF0aW9uc2hpcCB0byB0aGUgbmV4dCBlbnRpdHlcbiAgbmFtZTogc3RyaW5nO1xuICBvcHRpb25zOiBDYWNGaWx0ZXJCYXJJdGVtW107ICAgLy8gSXRlbXMgdGhhdCBzaG91bGQgYmUgZGlzcGxheWVkIGFzIG9wdGlvbnMgZm9yIHRoaXMgZW50aXR5SWRcbiAgc2VhcmNoPzogc3RyaW5nOyAgICAgICAgICAgICAgIC8vIEEgc2VhcmNoIHN0cmluZyB0aGF0IHdpbGwgYmUgYXBwbGllcyB0byB0aGUgb3B0aW9ucyBvZiB0aGlzIGVudGl0eUlkXG4gIHNpbmdsZT86IGJvb2xlYW47XG4gIG1vZGU/OiBib29sZWFuO1xuICB2aXNpYmxlPzogYm9vbGVhbjtcbiAgc29ydF9vcmRlcj86IG51bWJlcjtcbn1cblxuXG5leHBvcnQgY2xhc3MgQ2FjRmlsdGVyQmFyRW50aXR5Q29uZmlnIHtcbiAgLyoqL1xuICBhbGxTZWxlY3RlZCA9IGZhbHNlO1xuICBpbnRlcm5hbF9uYW1lOiBzdHJpbmc7XG4gIGNoaWxkX2xpbms6IHN0cmluZyB8IG51bGw7IC8vIGNvbHVtbiB0aGF0IGNyZWF0ZXMgdGhlIHBhcmVudC9jaGlsZCByZWxhdGlvbnNoaXBcbiAgcGFyZW50X2xpbms6IHN0cmluZyB8IG51bGw7IC8vIGNvbHVtbiB0aGF0IGNyZWF0ZXMgdGhlIHBhcmVudC9jaGlsZCByZWxhdGlvbnNoaXBcbiAgbmFtZTogc3RyaW5nO1xuICBzZWFyY2g6ICcnO1xuICBjaGVja0FsbCA9IGZhbHNlO1xuICBvcHRpb25zOiBDYWNGaWx0ZXJCYXJJdGVtW107XG4gIGZlZWQ6IEJlaGF2aW9yU3ViamVjdDxDYWNGaWx0ZXJCYXJJdGVtW10+O1xuICB0b3RhbFZpc2libGU6IG51bWJlcjtcbiAgdG90YWxTZWxlY3RlZDogbnVtYmVyO1xuICB0b3RhbEF2YWlsYWJsZTogbnVtYmVyO1xuICB0b3RhbE9wdGlvbnM6IG51bWJlcjtcbiAgaW5kZXRlcm1pbmF0ZSA9IGZhbHNlO1xuICBzaW5nbGUgPSB0cnVlO1xuICBzZWxlY3RlZDogS2V5TWFwPGJvb2xlYW4+ID0ge307XG4gIGRpc3BsYXk6IEtleU1hcDxib29sZWFuPiA9IHt9O1xuICBoaWRkZW46IEtleU1hcDxib29sZWFuPiA9IHt9O1xuICBmaWx0ZXI6IGFueVtdID0gW107XG4gIHNlbGVjdGVkVGV4dCA9ICcnO1xuICBkaXNwbGF5U2VsZWN0ZWRUZXh0ID0gJyc7XG4gIHRvdGFsVGV4dCA9ICcnO1xuICBtb2RlID0gZmFsc2U7XG4gIHZpc2libGUgPSBmYWxzZTtcbiAgc29ydF9vcmRlcj86IG51bWJlcjtcblxuXG4gIGNvbnN0cnVjdG9yKHBhcmFtczogQ2FjRmlsdGVyQmFyRW50aXR5SW50ZXJmYWNlKXtcbiAgICBmb3IoIGNvbnN0IGkgaW4gcGFyYW1zICkgdGhpc1sgaSBdID0gcGFyYW1zWyBpIF07XG4gICAgdGhpcy5mZWVkID0gbmV3IEJlaGF2aW9yU3ViamVjdDxDYWNGaWx0ZXJCYXJJdGVtW10+KFtdKTtcbiAgfVxufVxuXG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2FjRmlsdGVyQmFySXRlbSB7XG4gIGlkOiBudW1iZXI7XG4gIG5hbWU6IHN0cmluZztcbiAgc2VsZWN0ZWQ/OiBib29sZWFuO1xuICBoaWRkZW4/OiBib29sZWFuO1xuICBkaXNwbGF5PzogYm9vbGVhbjtcbiAgY2xpZW50X2lkOiBudW1iZXI7XG4gIGFjY291bnRfaWQ/OiBudW1iZXI7XG4gIGNhbXBhaWduX2lkPzogbnVtYmVyO1xuICBhZ2VuY3lfaWQ/OiBudW1iZXI7XG4gIHNvcnQ/OiBudW1iZXI7XG59XG5cblxuZXhwb3J0IGludGVyZmFjZSBDYWNGaWx0ZXIge1xuICBjbGllbnQ/OiBhbnlbXTtcbiAgYWNjb3VudD86IGFueVtdO1xuICBjYW1wYWlnbj86IGFueVtdO1xufVxuXG5cblxuXG4iXX0=